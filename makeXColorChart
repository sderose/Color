#!/usr/bin/env perl -w
#
# xcolorchart: Make HTML file displays color chips.
#
# 2007-06-06: Written by Steven J. DeRose.
# 2007-12-14 sjd: Getopt. Ignore header lines. Add -i, -gray.
# 2010-09-12, 2012-10-05 sjd: Cleanup.
#
use strict;
use Getopt::Long;

our $VERSION_DATE = "2012-10-05";

my $ignoreCase = 0;
my $gray       = 1;
my $quiet      = 0;
my $theFile    = "/usr/X11/lib/X11/rgb.txt";
my $verbose    = 0;


###############################################################################
# Process options
#
my %getoptHash = (
    "colorFile"         => \$theFile,
	"gray|grey!"        => \$gray,
	"h|help|?"          => sub { system "perldoc $0"; exit; },
	"i|ignorecase"      => \$ignoreCase,
	"q|quiet!"          => \$quiet,
	"v|verbose+"        => \$verbose,
    "version"           => sub {
		die "Version of $VERSION_DATE, by Steven J. DeRose.\n";
	},
	);

Getopt::Long::Configure ("ignore_case");
GetOptions(%getoptHash) || die("Bad options.\n");



###############################################################################
###############################################################################
# Main
#
(-e $theFile) || die "Couldn't find file '$theFile'.\n";
open IN, "<$theFile";

print "
<html>
<!-- Generated by ~deroses/xcolorchart, version of $VERSION_DATE -->
<head>
<style type=\"text/css\">
    td      { font-size:larger; }
</style>
<title>X Windows Color Chart</title>
</head>
<body>
<h1>Colors from $theFile</h1>
<br />
";

if ($ignoreCase) {
	print
	"<p>(color names differing only in case and spacing are not listed)</p>\n";
}

print "<table border=\"border\">\n";

print "<thead style=\"background-color:cyan;\">
<th>Name</th>
<th>On white</th>
<th>On black</th>
<th>Under black</th>
<th>Under white</th>
</thead>
";

my %seen = ();
while (my $rec = <IN>) {
	if ($rec =~ m/^!/) { next; }
    my @tokens = split(/\s+/," $rec");
    #warn "Got: " . (scalar @tokens) . ": " . join(" ", @tokens) . "\n";
    my $code = sprintf("%02x%02x%02x", $tokens[1], $tokens[2], $tokens[3]);
    $tokens[0] = $tokens[1] = $tokens[2] = $tokens[3] = "";
    my $name = join(" ",@tokens);
	(my $iname = lc($name)) =~ s/\s//g;
	$iname =~ s/grey/gray/g;
	if ($ignoreCase && $seen{$iname}) { next; }
	if (!$gray && $iname =~ m/gray/)  { next; }
    print "<tr><td>$name</td>\n";
    print "<td style=\"color:$code\">$name</td>\n";
    print "<td style=\"color:$code; background-color:black\">$name</td>\n";
    print "<td style=\"background-color:$code;\">$name</td>\n";
    print "<td style=\"color:white; background-color:$code;\">$name</td>\n";
    print "</tr>\n";
	$seen{$iname}++;
}

print "
</table>
<h3>Generated by /home/deroses/xcolorchart</h3>
</body>
</html>
";

exit;



###############################################################################
###############################################################################
###############################################################################
#

=pod

=head1 Usage

makeXColorChart [options] [>destination-file]

Generates an HTML file that nicely shows all the colors defined for
X11 in a file. Writes to stdout.

By default, looks for a color-list at F</usr/X11/lib/X11/rgb.txt>.
You might also try F</usr/share/emacs/22.1/etc/rgb.txt>.

=head1 Options

(prefix 'no' to negate where applicable)

=over

=item * B<--gray> OR B<--grey>

Include shades of grey (gray0 to gray100).
(default; to turn off, use I<--nogray>).

=item * B<-i>

Discard entries that match prior ones except for case,
whitespace, and gray vs. grey spelling.

=item * B<--quiet> OR B<-q>
Suppress most messages.

=item * B<--verbose>

Add more detailed messages.

=item * B<--version>

Display version info and exit.

=back



=head1 Ownership

This work by Steven J. DeRose is licensed under a Creative Commons
Attribution-Share Alike 3.0 Unported License. For further information on
this license, see L<http://creativecommons.org/licenses/by-sa/3.0/>.

For the most recent version, see L<http://www.derose.net/steve/utilities/>.

=cut
